{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Web3DexV4\\\\dexStarter\\\\dex\\\\src\\\\components\\\\Tokens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tokens = () => {\n  _s();\n  const [cryptoData, setCryptoData] = useState([]);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=chainlink,polygon,uniswap,curve-dao-token,maker,bitcoin,apecoin,usd-coin,shiba-inu,ethereum,binancecoin,cardano,ripple,litecoin,tezos,stellar,eos,vechain,dogecoin,tron,celsius,algorand&include_market_cap=true\");\n        const data = await response.json();\n        const updatedCryptoData = data.map(crypto => {\n          const token = crypto.id;\n          const price = crypto.current_price || 0;\n          const change24h = crypto.price_change_percentage_24h || 0;\n          const marketCap = crypto.market_cap || 0;\n          const iconUrl = crypto.image;\n          return {\n            token,\n            price,\n            change24h,\n            marketCap,\n            iconUrl\n          };\n        });\n        setCryptoData(updatedCryptoData);\n      } catch (error) {\n        console.log(\"Error fetching crypto data:\", error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tokens_box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokens_box_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column tokens_column_logo\",\n        children: cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: crypto.iconUrl,\n            alt: crypto.token,\n            className: \"token_icon\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_name\",\n            children: crypto.token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_price\",\n            children: [\"$\", crypto.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"24h Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_change\",\n            children: [crypto.change24h.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Market Cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_market_cap\",\n            children: [\"$\", crypto.marketCap.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Tokens, \"Oj3XXuOSrEjRAb+wkD0vZ9UY75k=\");\n_c = Tokens;\nexport default Tokens;\nvar _c;\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["React","useEffect","useState","Tokens","cryptoData","setCryptoData","fetchCryptoData","response","fetch","data","json","updatedCryptoData","map","crypto","token","id","price","current_price","change24h","price_change_percentage_24h","marketCap","market_cap","iconUrl","image","error","console","log","width","height","toFixed","toLocaleString"],"sources":["C:/Users/Bogdan/Desktop/Web3DexV4/dexStarter/dex/src/components/Tokens.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Tokens = () => {\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=chainlink,polygon,uniswap,curve-dao-token,maker,bitcoin,apecoin,usd-coin,shiba-inu,ethereum,binancecoin,cardano,ripple,litecoin,tezos,stellar,eos,vechain,dogecoin,tron,celsius,algorand&include_market_cap=true\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const updatedCryptoData = data.map((crypto) => {\r\n          const token = crypto.id;\r\n          const price = crypto.current_price || 0;\r\n          const change24h = crypto.price_change_percentage_24h || 0;\r\n          const marketCap = crypto.market_cap || 0;\r\n          const iconUrl = crypto.image;\r\n          return { token, price, change24h, marketCap, iconUrl };\r\n        });\r\n\r\n        setCryptoData(updatedCryptoData);\r\n      } catch (error) {\r\n        console.log(\"Error fetching crypto data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tokens_box\">\r\n      <div className=\"tokens_box_content\">\r\n        <div className=\"tokens_column tokens_column_logo\">\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.token}>\r\n              <img\r\n                src={crypto.iconUrl}\r\n                alt={crypto.token}\r\n                className=\"token_icon\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Tokens</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.token}>\r\n              <p className=\"token_name\">{crypto.token}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Price</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.token}>\r\n              <p className=\"token_price\">${crypto.price.toFixed(2)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">24h Change</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.token}>\r\n              <p className=\"token_change\">{crypto.change24h.toFixed(2)}%</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Market Cap</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.token}>\r\n              <p className=\"token_market_cap\">${crypto.marketCap.toLocaleString()}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tokens;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMK,eAAe,GAAG,YAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qRAAqR,CACtR;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAElC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,GAAG,CAAEC,MAAM,IAAK;UAC7C,MAAMC,KAAK,GAAGD,MAAM,CAACE,EAAE;UACvB,MAAMC,KAAK,GAAGH,MAAM,CAACI,aAAa,IAAI,CAAC;UACvC,MAAMC,SAAS,GAAGL,MAAM,CAACM,2BAA2B,IAAI,CAAC;UACzD,MAAMC,SAAS,GAAGP,MAAM,CAACQ,UAAU,IAAI,CAAC;UACxC,MAAMC,OAAO,GAAGT,MAAM,CAACU,KAAK;UAC5B,OAAO;YAAET,KAAK;YAAEE,KAAK;YAAEE,SAAS;YAAEE,SAAS;YAAEE;UAAQ,CAAC;QACxD,CAAC,CAAC;QAEFjB,aAAa,CAACM,iBAAiB,CAAC;MAClC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACnD;IACF,CAAC;IAEDlB,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBACjC;QAAK,SAAS,EAAC,kCAAkC;QAAA,UAC9CF,UAAU,CAACQ,GAAG,CAAEC,MAAM,iBACrB;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YACE,GAAG,EAAEA,MAAM,CAACS,OAAQ;YACpB,GAAG,EAAET,MAAM,CAACC,KAAM;YAClB,SAAS,EAAC,YAAY;YACtB,KAAK,EAAE;cAAEa,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAA;YAAA;YAAA;UAAA;QACzC,GAN8Bf,MAAM,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAQ/C;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAI,SAAS,EAAC,sBAAsB;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,EAC/CV,UAAU,CAACQ,GAAG,CAAEC,MAAM,iBACrB;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAG,SAAS,EAAC,YAAY;YAAA,UAAEA,MAAM,CAACC;UAAK;YAAA;YAAA;YAAA;UAAA;QAAK,GADZD,MAAM,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAG/C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAI,SAAS,EAAC,sBAAsB;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,EAC9CV,UAAU,CAACQ,GAAG,CAAEC,MAAM,iBACrB;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAG,SAAS,EAAC,aAAa;YAAA,WAAC,GAAC,EAACA,MAAM,CAACG,KAAK,CAACa,OAAO,CAAC,CAAC,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QAAK,GADzBhB,MAAM,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAG/C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAI,SAAS,EAAC,sBAAsB;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAK,EACnDV,UAAU,CAACQ,GAAG,CAAEC,MAAM,iBACrB;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAG,SAAS,EAAC,cAAc;YAAA,WAAEA,MAAM,CAACK,SAAS,CAACW,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QAAI,GAD9BhB,MAAM,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAG/C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAI,SAAS,EAAC,sBAAsB;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAK,EACnDV,UAAU,CAACQ,GAAG,CAAEC,MAAM,iBACrB;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAG,SAAS,EAAC,kBAAkB;YAAA,WAAC,GAAC,EAACA,MAAM,CAACO,SAAS,CAACU,cAAc,EAAE;UAAA;YAAA;YAAA;YAAA;UAAA;QAAK,GADxCjB,MAAM,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAG/C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/EIX,MAAM;AAAA,KAANA,MAAM;AAiFZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
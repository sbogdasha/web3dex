{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Web3DexV4\\\\dexStarter\\\\dex\\\\src\\\\components\\\\Tokens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tokens = () => {\n  _s();\n  const [cryptoData, setCryptoData] = useState([]);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=chainlink,polygon,uniswap,curve-dao-token,maker&vs_currencies=usd&include_24hr_change=true\");\n        const data = await response.json();\n\n        // Обработка данных\n        const tokens = Object.keys(data);\n        const updatedCryptoData = tokens.map(token => {\n          const price = data[token].usd;\n          const change24h = data[token].usd_24h_change;\n          return {\n            token,\n            price,\n            change24h\n          };\n        });\n        setCryptoData(updatedCryptoData);\n      } catch (error) {\n        console.log(\"Error fetching crypto data:\", error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crypto Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [crypto.token, \": $\", crypto.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Change (24h): \", crypto.change24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, crypto.token, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Tokens, \"Oj3XXuOSrEjRAb+wkD0vZ9UY75k=\");\n_c = Tokens;\nexport default Tokens;\nvar _c;\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["React","useEffect","useState","Tokens","cryptoData","setCryptoData","fetchCryptoData","response","fetch","data","json","tokens","Object","keys","updatedCryptoData","map","token","price","usd","change24h","usd_24h_change","error","console","log","crypto","toFixed"],"sources":["C:/Users/Bogdan/Desktop/Web3DexV4/dexStarter/dex/src/components/Tokens.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Tokens = () => {\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/simple/price?ids=chainlink,polygon,uniswap,curve-dao-token,maker&vs_currencies=usd&include_24hr_change=true\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        // Обработка данных\r\n        const tokens = Object.keys(data);\r\n        const updatedCryptoData = tokens.map((token) => {\r\n          const price = data[token].usd;\r\n          const change24h = data[token].usd_24h_change;\r\n          return { token, price, change24h };\r\n        });\r\n\r\n        setCryptoData(updatedCryptoData);\r\n      } catch (error) {\r\n        console.log(\"Error fetching crypto data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Crypto Chart</h2>\r\n      <ul>\r\n        {cryptoData.map((crypto) => (\r\n          <li key={crypto.token}>\r\n            <p>{crypto.token}: ${crypto.price.toFixed(2)}</p>\r\n            <p>Change (24h): {crypto.change24h.toFixed(2)}%</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tokens;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMK,eAAe,GAAG,YAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8IAA8I,CAC/I;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;;QAElC;QACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC;QAChC,MAAMK,iBAAiB,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAK;UAC9C,MAAMC,KAAK,GAAGR,IAAI,CAACO,KAAK,CAAC,CAACE,GAAG;UAC7B,MAAMC,SAAS,GAAGV,IAAI,CAACO,KAAK,CAAC,CAACI,cAAc;UAC5C,OAAO;YAAEJ,KAAK;YAAEC,KAAK;YAAEE;UAAU,CAAC;QACpC,CAAC,CAAC;QAEFd,aAAa,CAACS,iBAAiB,CAAC;MAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACnD;IACF,CAAC;IAEDf,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,UACGF,UAAU,CAACW,GAAG,CAAES,MAAM,iBACrB;QAAA,wBACE;UAAA,WAAIA,MAAM,CAACR,KAAK,EAAC,KAAG,EAACQ,MAAM,CAACP,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACjD;UAAA,WAAG,gBAAc,EAACD,MAAM,CAACL,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA,GAF5CD,MAAM,CAACR,KAAK;QAAA;QAAA;QAAA;MAAA,QAItB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GAzCIb,MAAM;AAAA,KAANA,MAAM;AA2CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
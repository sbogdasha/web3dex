{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Web3DexV4\\\\dexStarter\\\\dex\\\\src\\\\components\\\\Tokens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tokens = () => {\n  _s();\n  const tokenList = [{\n    ticker: \"LINK\",\n    name: \"Chainlink\"\n  }, {\n    ticker: \"WBTC\",\n    name: \"Wrapped Bitcoin\"\n  }, {\n    ticker: \"WETH\",\n    name: \"Wrapped Ethereum\"\n  }, {\n    ticker: \"MATIC\",\n    name: \"Matic Token\"\n  }, {\n    ticker: \"SHIB\",\n    name: \"Shiba Inu\"\n  }, {\n    ticker: \"UNI\",\n    name: \"Uniswap\"\n  }, {\n    ticker: \"OKB\",\n    name: \"OKB\"\n  }, {\n    ticker: \"APE\",\n    name: \"Ape Coin\"\n  }, {\n    ticker: \"SUSHI\",\n    name: \"SushiToken\"\n  }, {\n    ticker: \"USDC\",\n    name: \"USD Coin\"\n  }];\n  const [cryptoData, setCryptoData] = useState([]);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=chainlink,polygon,uniswap,curve-dao-token,maker,bitcoin,apecoin,usd-coin,shiba-inu,sushiswap,okb&vs_currencies=usd&include_24hr_change=true\");\n        const data = await response.json();\n        const updatedCryptoData = tokenList.map(token => {\n          const tokenData = data[token.ticker.toLowerCase()];\n          if (tokenData) {\n            const price = tokenData.usd || 0;\n            const change24h = tokenData.usd_24h_change || 0;\n            return {\n              ...token,\n              price,\n              change24h\n            };\n          }\n          return {\n            ...token,\n            price: 0,\n            change24h: 0\n          };\n        });\n        setCryptoData(updatedCryptoData);\n      } catch (error) {\n        console.log(\"Error fetching crypto data:\", error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tokens_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokens_box_header\",\n      children: \"Token price & change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokens_box_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_name\",\n            children: crypto.ticker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, crypto.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_price\",\n            children: [\"$\", crypto.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, crypto.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"24h Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token_entry\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"token_change\",\n            children: [crypto.change24h.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, crypto.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Tokens, \"Oj3XXuOSrEjRAb+wkD0vZ9UY75k=\");\n_c = Tokens;\nexport default Tokens;\nvar _c;\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["React","useEffect","useState","Tokens","tokenList","ticker","name","cryptoData","setCryptoData","fetchCryptoData","response","fetch","data","json","updatedCryptoData","map","token","tokenData","toLowerCase","price","usd","change24h","usd_24h_change","error","console","log","crypto","toFixed"],"sources":["C:/Users/Bogdan/Desktop/Web3DexV4/dexStarter/dex/src/components/Tokens.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Tokens = () => {\r\n  const tokenList = [\r\n    { ticker: \"LINK\", name: \"Chainlink\" },\r\n    { ticker: \"WBTC\", name: \"Wrapped Bitcoin\" },\r\n    { ticker: \"WETH\", name: \"Wrapped Ethereum\" },\r\n    { ticker: \"MATIC\", name: \"Matic Token\" },\r\n    { ticker: \"SHIB\", name: \"Shiba Inu\" },\r\n    { ticker: \"UNI\", name: \"Uniswap\" },\r\n    { ticker: \"OKB\", name: \"OKB\" },\r\n    { ticker: \"APE\", name: \"Ape Coin\" },\r\n    { ticker: \"SUSHI\", name: \"SushiToken\" },\r\n    { ticker: \"USDC\", name: \"USD Coin\" },\r\n  ];\r\n\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/simple/price?ids=chainlink,polygon,uniswap,curve-dao-token,maker,bitcoin,apecoin,usd-coin,shiba-inu,sushiswap,okb&vs_currencies=usd&include_24hr_change=true\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const updatedCryptoData = tokenList.map((token) => {\r\n          const tokenData = data[token.ticker.toLowerCase()];\r\n          if (tokenData) {\r\n            const price = tokenData.usd || 0;\r\n            const change24h = tokenData.usd_24h_change || 0;\r\n            return { ...token, price, change24h };\r\n          }\r\n          return { ...token, price: 0, change24h: 0 };\r\n        });\r\n\r\n        setCryptoData(updatedCryptoData);\r\n      } catch (error) {\r\n        console.log(\"Error fetching crypto data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tokens_box\">\r\n      <div className=\"tokens_box_header\">Token price & change</div>\r\n      <div className=\"tokens_box_content\">\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Tokens</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.ticker}>\r\n              <p className=\"token_name\">{crypto.ticker}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Price</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.ticker}>\r\n              <p className=\"token_price\">${crypto.price.toFixed(2)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">24h Change</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <div className=\"token_entry\" key={crypto.ticker}>\r\n              <p className=\"token_change\">{crypto.change24h.toFixed(2)}%</p>\r\n</div>\r\n))}\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n};\r\n\r\nexport default Tokens;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
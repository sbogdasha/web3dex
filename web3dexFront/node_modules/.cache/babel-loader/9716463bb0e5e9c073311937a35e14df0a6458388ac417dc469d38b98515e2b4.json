{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Web3DexV4\\\\dexStarter\\\\dex\\\\src\\\\components\\\\Tokens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tokens = () => {\n  _s();\n  const [cryptoData, setCryptoData] = useState([]);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const apiKey = \"331bef37-46fc-4dd8-bce6-e9be75bae8e5\"; // Вставьте ваш API ключ CoinMarketCap\n        const response = await fetch(`https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest?CMC_PRO_API_KEY=${apiKey}`);\n        const data = await response.json();\n\n        // Обработка данных\n        const updatedCryptoData = data.data.map(crypto => {\n          const token = crypto.name;\n          const price = crypto.quote.USD.price;\n          const change24h = crypto.quote.USD.percent_change_24h;\n          const change7d = crypto.quote.USD.percent_change_7d;\n          const change30d = crypto.quote.USD.percent_change_30d;\n          return {\n            token,\n            price,\n            change24h,\n            change7d,\n            change30d\n          };\n        });\n        setCryptoData(updatedCryptoData);\n      } catch (error) {\n        console.log(\"Error fetching crypto data:\", error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tokens_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokens_box_header\",\n      children: \"Token price & change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokens_box_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"token_name\",\n          children: crypto.token\n        }, crypto.token, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"24h Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"token_change\",\n          children: [crypto.change24h.toFixed(2), \"%\"]\n        }, crypto.token, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"7d Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"token_change\",\n          children: [crypto.change7d.toFixed(2), \"%\"]\n        }, crypto.token, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"tokens_column_header\",\n          children: \"30d Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"token_change\",\n          children: [crypto.change30d.toFixed(2), \"%\"]\n        }, crypto.token, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Tokens, \"Oj3XXuOSrEjRAb+wkD0vZ9UY75k=\");\n_c = Tokens;\nexport default Tokens;\nvar _c;\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["React","useEffect","useState","Tokens","cryptoData","setCryptoData","fetchCryptoData","apiKey","response","fetch","data","json","updatedCryptoData","map","crypto","token","name","price","quote","USD","change24h","percent_change_24h","change7d","percent_change_7d","change30d","percent_change_30d","error","console","log","toFixed"],"sources":["C:/Users/Bogdan/Desktop/Web3DexV4/dexStarter/dex/src/components/Tokens.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Tokens = () => {\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      try {\r\n        const apiKey = \"331bef37-46fc-4dd8-bce6-e9be75bae8e5\"; // Вставьте ваш API ключ CoinMarketCap\r\n        const response = await fetch(\r\n          `https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest?CMC_PRO_API_KEY=${apiKey}`\r\n        );\r\n        const data = await response.json();\r\n\r\n        // Обработка данных\r\n        const updatedCryptoData = data.data.map((crypto) => {\r\n          const token = crypto.name;\r\n          const price = crypto.quote.USD.price;\r\n          const change24h = crypto.quote.USD.percent_change_24h;\r\n          const change7d = crypto.quote.USD.percent_change_7d;\r\n          const change30d = crypto.quote.USD.percent_change_30d;\r\n          return { token, price, change24h, change7d, change30d };\r\n        });\r\n\r\n        setCryptoData(updatedCryptoData);\r\n      } catch (error) {\r\n        console.log(\"Error fetching crypto data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tokens_box\">\r\n      <div className=\"tokens_box_header\">Token price & change</div>\r\n      <div className=\"tokens_box_content\">\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">Tokens</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <p className=\"token_name\" key={crypto.token}>\r\n              {crypto.token}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">24h Change</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <p className=\"token_change\" key={crypto.token}>\r\n              {crypto.change24h.toFixed(2)}%\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">7d Change</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <p className=\"token_change\" key={crypto.token}>\r\n              {crypto.change7d.toFixed(2)}%\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"tokens_column\">\r\n          <h4 className=\"tokens_column_header\">30d Change</h4>\r\n          {cryptoData.map((crypto) => (\r\n            <p className=\"token_change\" key={crypto.token}>\r\n              {crypto.change30d.toFixed(2)}%\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tokens;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}